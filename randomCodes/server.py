from crypt import methods
from glob import escape
from flask import Flask, redirect,url_for,render_template,request,session


#please read more informations here https://flask.palletsprojects.com/en/2.1.x/quickstart/
#To learn about session, methods and so one!
app = Flask(__name__)

app.secret_key="e3f41e65b629a5310a4a202aea40f40edd6c5e0bd4a669e4b13b762cd8e2cd37"
#secret was generated by runing  $python3 -c 'import secrets; print(secrets.token_hex())'

@app.route("/user/<string:name>")
def index(name):
    return f'<p>Hello, {name} World!</p>'

names=["Bonjour","Echo"]

@app.route("/user/getbyId/<int:id>/")
def view_per_id(id):
    try:
        res = f'<p>Hello, {names[id]} World!</p>'
    except:
        res = "Error reading your data"
    finally:
        return res

@app.route("/list_routes")
def view_all_routes():
    return f'<a href="{url_for("view_per_id",id=1)}">Go to this ID</a>' #generate url for function name and pass parameters

@app.route("/routesWithMethods",methods=["GET","POST"]) #this route accepts GET and POST
def submitSomething():
    if(request.method=="POST"):
        return "You have sent some post request"
    if(request.method=="GET"):
        return "You have sent some GET request"

#Same as the preceding example we are going to handle request with magic trigers

@app.get("/routesWithShortcutDeco")
def submittedGetReq():
    return "You have sent some GET request"

@app.post("/routesWithShortcutDeco")
def submittedPostReq():
    return "You have sent some post request"

@app.route("/hello/<path:name>/") #here path is the type converter and there is string,int,path,float and uuid
def helloBwan(name):
    return f'<h2>Hello Dear {escape(name)}</h2>' #f help us print template litteral and escape prevent injection but remember in all template, JINJA,the template engine already do it for us

@app.route('/login', methods=['GET', 'POST'])
def login():
    if request.method == 'POST':
        session['username'] = request.form['username']
        return redirect(url_for('index',name=session['username']))
    return '''
        <form method="post">
            <p><input type=text name=username>
            <p><input type=submit value=Login>
        </form>

    '''
@app.errorhandler(404)
def page_not_found(error):
    return "404 page goes here please!",404